spring.application.name=spring-cloud-eureka

server.port=8001

eureka.instance.hostname=peer1

#在默认设置下，该服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为
#eureka.client.register-with-eureka=false  #表示是否将自己注册到Eureka Server，默认为true
#eureka.client.fetch-registry=false #表示是否从Eureka Server获取注册信息，默认为true



eureka.client.service-url.defaultZone=http://peer2:8002/eureka,http://peer3:8003/eureka


#注册中心这么关键的服务，如果是单点话，遇到故障就是毁灭性的。
#在一个分布式系统中，服务注册中心是最重要的基础部分，理应随时处于可以提供服务的状态。
#为了维持其可用性，使用集群是很好的解决方案。
#Eureka通过互相注册的方式来实现高可用的部署，
#所以我们只需要将Eureke Server配置其他可用的serviceUrl就能实现高可用部署。


#在生产中我们可能需要三台或者大于三台的注册中心来保证服务的稳定性，
#配置的原理其实都一样，将注册中心分别指向其它的注册中心。
#这里只介绍三台集群的配置情况，其实和双节点的注册中心类似，每台注册中心分别又指向其它两个节点即可，使用application.yml来配置。